@page "/auth"
@using Google.Apis.Auth.OAuth2;
@using Google.Apis.Drive.v3;
@using Google.Apis.Docs.v1;
@using Google.Apis.Services;
@using Google.Apis.Util.Store;
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Linq;
@using System.Text;
@using System.Threading;
@using System.Threading.Tasks;
@using Connector.Areas.Auth.Services;

@inject IGoogleDriveService googleDriveService
@inject IGoogleDocsService googleDocsService

<h3>Index</h3>
<h1>Hello World</h1>
<p>I'm hosted with GitHub Pages.</p>

<ul>
@foreach (var item in filesNames)
{

    <li><button @onclick="@(e => chooseDocument(item.Id))">@item.Name</button></li>
}
</ul>

<div>
    @Body
</div>

<button @onclick="updateList" />

@code {
    public string chooseDocumentId { get; set; }
}

@functions {
    protected void chooseDocument(string documentId)
    {
        this.chooseDocumentId = documentId;

        DocumentsResource.GetRequest request = googleDocsService.DocsService.Documents.Get(this.chooseDocumentId);

        Google.Apis.Docs.v1.Data.Document doc = request.Execute();
        StringBuilder stringBuilder = new StringBuilder();

        foreach (var i in doc.Body.Content)
        {
            var p = i.Paragraph;
            if (p != null)
            {
                foreach (var e in p.Elements)
                {
                    stringBuilder.Append(e?.TextRun?.Content ?? string.Empty);
                }
            }
        }

        Body = stringBuilder.ToString();
    }

    public List<Google.Apis.Drive.v3.Data.File> filesNames = new List<Google.Apis.Drive.v3.Data.File>();

    public string Body;

    protected void updateList()
    {
        filesNames.Clear();

        FilesResource.ListRequest listRequest = googleDriveService.DriveService.Files.List();
        listRequest.PageSize = 10;
        listRequest.Fields = "nextPageToken, files(id, name)";

        IList<Google.Apis.Drive.v3.Data.File> files = listRequest.Execute().Files;
        if (files != null)
        {
            filesNames.AddRange(files);
        }
    }
}